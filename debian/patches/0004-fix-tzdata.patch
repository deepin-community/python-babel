Description: tzdata's new update in debian has removed support for US/* timezones
Author: Nilesh Patra <nilesh@debian.org>
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1052858
Last-Update: 2023-10-10
--- a/babel/dates.py
+++ b/babel/dates.py
@@ -745,7 +745,7 @@
     ...                 locale='fr_FR')
     u'dimanche 1 avril 2007 \xe0 17:30:00 heure d\u2019\xe9t\xe9 d\u2019Europe centrale'
     >>> format_datetime(dt, "yyyy.MM.dd G 'at' HH:mm:ss zzz",
-    ...                 tzinfo=get_timezone('US/Eastern'), locale='en')
+    ...                 tzinfo=get_timezone('America/New_York'), locale='en')
     u'2007.04.01 AD at 11:30:00 EDT'
 
     :param datetime: the `datetime` object; if `None`, the current date and
@@ -791,7 +791,7 @@
     >>> t = tzinfo.localize(t)
     >>> format_time(t, format='full', tzinfo=tzinfo, locale='fr_FR')
     u'15:30:00 heure d\u2019\xe9t\xe9 d\u2019Europe centrale'
-    >>> format_time(t, "hh 'o''clock' a, zzzz", tzinfo=get_timezone('US/Eastern'),
+    >>> format_time(t, "hh 'o''clock' a, zzzz", tzinfo=get_timezone('America/New_York'),
     ...             locale='en')
     u"09 o'clock AM, Eastern Daylight Time"
 
@@ -812,7 +812,7 @@
     >>> format_time(t, format='full', tzinfo=get_timezone('Europe/Paris'),
     ...             locale='fr_FR')
     u'15:30:00 heure normale d\u2019Europe centrale'
-    >>> format_time(t, format='full', tzinfo=get_timezone('US/Eastern'),
+    >>> format_time(t, format='full', tzinfo=get_timezone('America/New_York'),
     ...             locale='en_US')
     u'3:30:00 PM Eastern Standard Time'
 
--- a/babel/support.py
+++ b/babel/support.py
@@ -58,7 +58,7 @@
 
         >>> from datetime import datetime
         >>> from pytz import timezone
-        >>> fmt = Format('en_US', tzinfo=timezone('US/Eastern'))
+        >>> fmt = Format('en_US', tzinfo=timezone('America/New_York'))
         >>> fmt.datetime(datetime(2007, 4, 1, 15, 30))
         u'Apr 1, 2007, 11:30:00 AM'
         """
@@ -70,7 +70,7 @@
 
         >>> from datetime import datetime
         >>> from pytz import timezone
-        >>> fmt = Format('en_US', tzinfo=timezone('US/Eastern'))
+        >>> fmt = Format('en_US', tzinfo=timezone('America/New_York'))
         >>> fmt.time(datetime(2007, 4, 1, 15, 30))
         u'11:30:00 AM'
         """
--- a/docs/dates.rst
+++ b/docs/dates.rst
@@ -287,7 +287,7 @@
     >>> from datetime import time
     >>> from babel.dates import get_timezone, UTC
     >>> dt = datetime(2007, 4, 1, 15, 30, tzinfo=UTC)
-    >>> eastern = get_timezone('US/Eastern')
+    >>> eastern = get_timezone('America/New_York')
     >>> format_datetime(dt, 'H:mm Z', tzinfo=eastern, locale='en_US')
     u'11:30 -0400'
 
--- a/tests/test_dates.py
+++ b/tests/test_dates.py
@@ -439,7 +439,7 @@
 
     def test_with_naive_datetime_and_tzinfo(self):
         string = dates.format_time(datetime(2007, 4, 1, 15, 30),
-                                   'long', tzinfo=timezone('US/Eastern'),
+                                   'long', tzinfo=timezone('America/New_York'),
                                    locale='en')
         self.assertEqual('11:30:00 AM EDT', string)
 
@@ -705,7 +705,7 @@
     assert full == (u'dimanche 1 avril 2007 Ã  17:30:00 heure '
                     u'd\u2019\xe9t\xe9 d\u2019Europe centrale')
     custom = dates.format_datetime(dt, "yyyy.MM.dd G 'at' HH:mm:ss zzz",
-                                   tzinfo=timezone('US/Eastern'), locale='en')
+                                   tzinfo=timezone('America/New_York'), locale='en')
     assert custom == u'2007.04.01 AD at 11:30:00 EDT'
 
 
@@ -723,7 +723,7 @@
     fr = dates.format_time(t, format='full', tzinfo=tzinfo, locale='fr_FR')
     assert fr == u'15:30:00 heure d\u2019\xe9t\xe9 d\u2019Europe centrale'
     custom = dates.format_time(t, "hh 'o''clock' a, zzzz",
-                               tzinfo=timezone('US/Eastern'), locale='en')
+                               tzinfo=timezone('America/New_York'), locale='en')
     assert custom == u"09 o'clock AM, Eastern Daylight Time"
 
     t = time(15, 30)
@@ -731,7 +731,7 @@
                               tzinfo=timezone('Europe/Paris'), locale='fr_FR')
     assert paris == u'15:30:00 heure normale d\u2019Europe centrale'
     us_east = dates.format_time(t, format='full',
-                                tzinfo=timezone('US/Eastern'), locale='en_US')
+                                tzinfo=timezone('America/New_York'), locale='en_US')
     assert us_east == u'3:30:00 PM Eastern Standard Time'
 
 
--- a/tests/test_support.py
+++ b/tests/test_support.py
@@ -306,14 +306,14 @@
 
 def test_format_datetime():
     from pytz import timezone
-    fmt = support.Format('en_US', tzinfo=timezone('US/Eastern'))
+    fmt = support.Format('en_US', tzinfo=timezone('America/New_York'))
     when = datetime(2007, 4, 1, 15, 30)
     assert fmt.datetime(when) == 'Apr 1, 2007, 11:30:00 AM'
 
 
 def test_format_time():
     from pytz import timezone
-    fmt = support.Format('en_US', tzinfo=timezone('US/Eastern'))
+    fmt = support.Format('en_US', tzinfo=timezone('America/New_York'))
     assert fmt.time(datetime(2007, 4, 1, 15, 30)) == '11:30:00 AM'
 
 
